extends layout 



block content
  include mixins/inputField
  include mixins/adminForm
  include mixins/hiddenField
  form(method='POST' id='registrationForm').register-form
    header.form-header
      h1= title
      p.form-disclaimer-text
        em
          strong Information submitted through this form will be publicly displayed after review. Please refrain from entering any real personal information. This project is for educational purposes only.
    div.register-form-inputs-container
      if errorMsgs
        ul 
        for msg in errorMsgs 
          li.error-message!= msg
      section.form-input-section
        +hiddenField('entity-type','entityType',value=entityType)
        if isUpdate
          +hiddenField('entity-id','entityId',value=entityId)
        h2.form-input-section-header Representative
        div.grouped-input-fields
          +inputField('repFirstName', 'First Name', 'Nicolas-Jacques', repFirstName===undefined ? '' : repFirstName, true)
          +inputField('repLastName', 'Last Name', 'ContÃ©', repLastName===undefined ? '' : repLastName, true)
          +inputField('repRole', 'Role', 'Select Your Role', repRole===undefined ? '' : repRole, true, 'select',repRoles)
      section.form-input-section
        h2.form-input-section-header Company
        div.grouped-input-fields
          +inputField('companyName','Name', 'Pencilooza', companyName===undefined ? '' : companyName, true)
        div.grouped-input-fields
          +inputField('companyRef', 'Company Shorthand', 'PNCLOZA', companyRef===undefined ? '' : companyRef, true)
          +inputField('companyStructure', 'Structure', 'Select Your Business Structure', companyStructure===undefined ? '' : companyStructure, true, 'select',companyStructures)
        div.grouped-input-fields
          +inputField('yearFounded', 'Year Founded', '2020', yearFounded===undefined ? '' : yearFounded, true, 'number')
          +inputField('ein', 'EIN', 'XX-XXXXXXX', ein===undefined ? '' : ein)
        +inputField('companyDescription','Description', 'Tell us about your company!', companyDescription===undefined ? '' : companyDescription, false, 'textarea')
      section.form-input-section
        h2.form-input-section-header Location
        div.grouped-input-fields
          +inputField('countryCode', 'Country', 'Select Your Country Code', countryCode===undefined ? '' : countryCode, true, 'select',countryCodes)
          +inputField('state', 'State/Province/Region', 'FL', state===undefined ? '' : state, true)
        div.grouped-input-fields
          +inputField('postalCode', 'Postal', '32013', postalCode===undefined ? '' : postalCode, true)
          +inputField('city', 'City', 'Orange', city===undefined ? '' : city, true)
        div.grouped-input-fields
          +inputField('street', 'Street', '42 Scribble St.', street===undefined ? '' : street, true)
          +inputField('extension', 'Extension', 'APT. HB2, PO Box 042, etc.', extension===undefined ? '' : extension)
      section.form-input-section
        h2.form-input-section-header Contact
        div.grouped-input-fields
          +inputField('email', 'Email', 'example@pencilooza.pencil', email===undefined ? '' : email, true, 'email')
          +inputField('phone', 'Phone', '0000000000', phone===undefined ? '' : phone, true, 'tel')
          +inputField('website', 'Website', 'https://example.com', website===undefined ? '' : website, false, 'url')
      section.form-input-section 
        h2.form-input-section-header Note
        +inputField('note', '', 'Enter any relevant details here. If you entered other in any of the above fields, this is a good place to specify.', note===undefined ? '' : note, false, 'textarea')
    case state
      when 'authUpdate'
        +adminForm('registrationForm', 'updateEntity')
      when 'noAuthUpdate'
        span.no-auth-admin-form-wrapper 
          +adminForm('registrationForm','updateRegistration')
      default
        button(type='submit').form-submit-button Submit





block scripts
  script.
    const setPendingValidation = (e) => {
      const field = e.target;
      if(field.value.trim() === '') field.classList.remove('pending-validation');
      else field.classList.add('pending-validation');
    }
    const getErrorMessage = (errTxt) => {
      const el = document.createElement('span');
      el.classList.add('error-message','input-field-wrapper-error-message');
      el.textContent = errTxt;
      return el;
    }
    const inputFields = document.querySelectorAll('.input-field-wrapper-field')
    inputFields.forEach(field => field.addEventListener('change', setPendingValidation))
    const errJSONStr = '!{JSON.stringify(errors)}';
    const errors = errJSONStr && errJSONStr.length > 0 ? JSON.parse('!{JSON.stringify(errors)}') : [];
    if(errors && errors.length > 0) {
      inputFields.forEach(inputField => {
        const inputFieldError = errors.find(err => err.selector === inputField.id);
        if(inputFieldError) {
          inputField.classList.add('invalid');
          inputField.nextSibling.append(getErrorMessage(inputFieldError.msg)) // Selects div.input-field-wrapper-errors-container from inputField mixin
        } else inputField.classList.add('valid');
      })
    }